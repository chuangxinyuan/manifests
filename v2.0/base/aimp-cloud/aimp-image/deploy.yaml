apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: aimp-image
  name: aimp-image
  namespace: aimp-cloud
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: aimp-image
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: null
      labels:
        app: aimp-image
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: aimprole.shaiic.com
                    operator: In
                    values:
                      - controller
      containers:
#      - args:
#        - /app/server
#        - -conf
#        - /data/conf
#        command:
#        - /bin/sh
#        - -c
      - image: cxyacr.azurecr.cn/aimp-cloud/aimp-image:182
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - /bin/sleep 30
#        livenessProbe:
#          failureThreshold: 3
#          httpGet:
#            path: /actuator/health/liveness
#            port: 8000
#            scheme: HTTP
#          initialDelaySeconds: 60
#          periodSeconds: 15
#          successThreshold: 1
#          timeoutSeconds: 1
        name: aimp-image
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
#        readinessProbe:
#          failureThreshold: 3
#          httpGet:
#            path: /actuator/health/readiness
#            port: 8000
#            scheme: HTTP
#          periodSeconds: 15
#          successThreshold: 1
#          timeoutSeconds: 1
        resources:
          limits:
            cpu: "2"
            memory: 4Gi
          requests:
            cpu: 100m
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /logs
          name: ms-log
        - mountPath: /elastic/apm/agent
          name: elastic-apm-agent
      dnsPolicy: ClusterFirstWithHostNet
      imagePullSecrets:
      - name: cxycred
      initContainers:
      - command:
          - cp
          - -v
          - /usr/agent/elastic-apm-agent.jar
          - /elastic/apm/agent
        image: docker.elastic.co/observability/apm-agent-java:1.26.0
        imagePullPolicy: IfNotPresent
        name: elastic-java-agent
        resources: { }
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /elastic/apm/agent
          name: elastic-apm-agent
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: { }
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /data/logs/ms/aimp-image
          type: ""
        name: ms-log
      - emptyDir: { }
        name: elastic-apm-agent
